<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd">

    <beans>
        <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
            <property name="brokerURL" value="tcp://localhost:${activemq.port}" />
        </bean>

        <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
            <property name="connectionFactory" ref="jmsConnectionFactory" />
            <property name="pubSubDomain" value="false" />
        </bean>

        <!--<rabbit:connection-factory id="rabbitConnectionFactory" host="${rabbitmq.host}" port="${rabbitmq.port}"/>-->
        <!--<rabbit:admin connection-factory="rabbitConnectionFactory" />-->
        <!--<rabbit:template id="amqpTemplate" connection-factory="rabbitConnectionFactory" message-converter="messageConverter" />-->
        <!--<rabbit:queue name="order.processing.queue" />-->
        <!--<rabbit:queue name="circuit-provisioning.processing.queue" />-->
        <!--<rabbit:queue name="dispatch.processing.queue" />-->
        <!--<bean id="messageConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter" />-->

        <beans profile="provision">
            <!--<rabbit:listener-container connection-factory="rabbitConnectionFactory"-->
                                       <!--message-converter="messageConverter">-->
                <!--<rabbit:listener queues="order.processing.queue" ref="orderMessageListener" method="orderPlaced" />-->
            <!--</rabbit:listener-container>-->
            <jms:listener-container container-type="default" connection-factory="jmsConnectionFactory"
                                    acknowledge="auto" destination-type="queue" concurrency="1">
                <jms:listener destination="order.processing.queue" ref="orderMessageListener" method="orderPlaced" />
            </jms:listener-container>
        </beans>

        <!--<beans profile="circuit-provision">-->
            <!--&lt;!&ndash;<rabbit:listener-container connection-factory="rabbitConnectionFactory"&ndash;&gt;-->
                                       <!--&lt;!&ndash;message-converter="messageConverter">&ndash;&gt;-->
                <!--&lt;!&ndash;<rabbit:listener queues="circuit-provisioning.processing.queue" ref="billingMessageListener" method="startBilling" />&ndash;&gt;-->
            <!--&lt;!&ndash;</rabbit:listener-container>&ndash;&gt;-->
            <!--<jms:listener-container container-type="default" connection-factory="jmsConnectionFactory"-->
                                    <!--acknowledge="auto" destination-type="queue" concurrency="1">-->
                <!--<jms:listener destination="circuit-provisioning.processing.queue" ref="billingMessageListener" method="startBilling" />-->
            <!--</jms:listener-container>-->
        <!--</beans>-->

        <beans profile="dispatch">
            <!--<rabbit:listener-container connection-factory="rabbitConnectionFactory"-->
                                       <!--message-converter="messageConverter">-->
                <!--<rabbit:listener queues="dispatch.processing.queue" ref="dispatchMessageListener" method="dispatch" />-->
            <!--</rabbit:listener-container>-->
            <jms:listener-container container-type="default" connection-factory="jmsConnectionFactory"
                                    acknowledge="auto" destination-type="queue" concurrency="1">
                <jms:listener destination="dispatch.processing.queue" ref="dispatchMessageListener" method="dispatch" />
            </jms:listener-container>
        </beans>



    </beans>
</beans>